@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pdfText = ViewBag.PdfText as string ?? "";
}

<h2>PDF Text Viewer & Mind Map</h2>

<div class="row">
    <div class="col-md-6">
        <h4>Extracted PDF Text</h4>
        <p>
            Select text with your mouse, then click "Add Explanation" to associate an explanation with that phrase.
        </p>
        <div class="border p-2" style="height: 400px; overflow-y: auto;" id="pdfTextContainer">
            @Html.Raw(Html.Encode(pdfText).Replace("\n", "<br />"))
        </div>

        <div class="my-3">
            <label>Selected Text:</label>
            <input type="text" id="selectedPhrase" class="form-control" readonly />
            <label>Explanation:</label>
            <textarea id="explanationText" class="form-control" rows="3"></textarea>
            <button class="btn btn-primary mt-2" id="btnAddExplanation">Add Explanation</button>
        </div>
    </div>

    <div class="col-md-6">
        <h4>Mind Map</h4>
        <div id="jsmind_container" style="width:100%; height:400px; border:1px solid #ccc;">
        </div>
    </div>
</div>

@section Scripts {
    <!-- jsmind library from CDN -->
    <script src="https://cdn.jsdelivr.net/gh/hizzgdev/jsmind@latest/js/jsmind.js"></script>
    <script src="~/js/mindmap.js"></script>
    <script>
        // Handle text selection
        const pdfTextContainer = document.getElementById('pdfTextContainer');
        pdfTextContainer.addEventListener('mouseup', function () {
            const selection = window.getSelection().toString().trim();
            if (selection.length > 0) {
                document.getElementById('selectedPhrase').value = selection;
            }
        });

        // Handle Add Explanation button click
        document.getElementById('btnAddExplanation').addEventListener('click', () => {
            const phrase = document.getElementById('selectedPhrase').value.trim();
            const explanationText = document.getElementById('explanationText').value.trim();

            if (!phrase) {
                alert("Please select a phrase in the text first.");
                return;
            }

            if (!explanationText) {
                alert("Please enter an explanation for the selected phrase.");
                return;
            }

            $.ajax({
                url: '/Home/AddExplanation',
                type: 'POST',
                data: { phrase: phrase, explanationText: explanationText },
                success: function (res) {
                    if (res.success) {
                        document.getElementById('explanationText').value = "";
                        alert('Explanation added successfully!');
                        loadMindMap();
                    } else {
                        alert(res.message || 'An error occurred.');
                    }
                },
                error: function () {
                    alert('An error occurred while adding the explanation.');
                }
            });
        });

        // Initialize mind map on page load
        $(document).ready(function () {
            loadMindMap();
        });

        // Function to load and render the mind map
        function loadMindMap() {
            $.ajax({
                url: '/Home/GetExplanations',
                type: 'GET',
                success: function (data) {
                    renderMindMap(data);
                },
                error: function () {
                    alert('Failed to load explanations.');
                }
            });
        }

        // Function to render the mind map using jsmind
        function renderMindMap(explanations) {
            const mindData = {
                "meta": {
                    "name": "MindMapPDF",
                    "author": "You",
                    "version": "1.0"
                },
                "format": "node_array",
                "data": []
            };

            // Root node
            mindData.data.push({
                "id": "root",
                "isroot": true,
                "topic": "PDF Explanations"
            });

            // Add explanations as child nodes
            explanations.forEach(exp => {
                mindData.data.push({
                    "id": "exp_" + exp.Id,
                    "parentid": "root",
                    "topic": `${exp.Phrase} - ${exp.Text}`
                });
            });

            // Destroy existing mind map if any
            window.jsMindInstance && window.jsMindInstance.destroy();

            // Initialize jsmind
            const options = {
                container: "jsmind_container",
                editable: false,
                theme: "primary"
            };
            const jm = new jsMind(options);
            jm.show(mindData);
            window.jsMindInstance = jm;
        }
    </script>
}
